{"version":3,"file":"express-route-grouping.esm.js","sources":["../src/utils.ts","../src/resources.ts","../src/index.ts"],"sourcesContent":["import { IResource, ResourceType } from './types';\nimport camelCase from 'lodash.camelcase';\n\nexport const sanitizer = (path: string) => {\n  if (path === '/') return '';\n\n  // remove slashes at start and end positions, if exists\n  // to sure there is no any slashes.\n  return path.replace(/^(\\/+)(.)/, '$2').replace(/(.)(\\/+)$/, '$1');\n};\n\nexport const leftPad = (value: string, pad: string, cond: boolean) => {\n  let newValue = value;\n  // add delimiter on the end\n  if (cond === true) {\n    newValue = value.padStart(value.length + 1, pad);\n  }\n  return newValue;\n};\n\nexport const normalizePath = (...paths: string[]) => {\n  return paths\n    .map(sanitizer)\n    .filter(Boolean)\n    .join('/');\n};\n\nexport const isResourceConfig = (\n  opts: IResource | ResourceType\n): opts is ResourceType => {\n  return 'handlers' in opts;\n};\n\nexport const makePlaceholder = (name: string) => {\n  if (!name || name.startsWith(':')) {\n    return name;\n  }\n  return `:${name}`;\n};\n\nexport const makeCamelCase = (...args: string[]) =>\n  camelCase(\n    args\n      .filter(Boolean)\n      .map(v => v.trim())\n      .join(' ')\n  );\n","const RESOURCES = {\n  index: { method: 'get', suffix: false },\n  show: { method: 'get', suffix: true },\n  store: { method: 'post', suffix: false },\n  update: { method: 'put', suffix: true },\n  patch: { method: 'patch', suffix: true },\n  destroy: { method: 'delete', suffix: true },\n};\n\nexport default RESOURCES;\n","import { IRouter as IExpressRouter, Router, NextFunction } from 'express';\nimport pluralize from 'pluralize';\nimport listRoutes from 'express-list-routes';\n\nimport {\n  isResourceConfig,\n  makeCamelCase,\n  makePlaceholder,\n  normalizePath,\n} from './utils';\nimport {\n  EndpointNames,\n  GroupArgs,\n  IResource,\n  IRouter,\n  RegisterCb,\n  RequestMethods,\n  ResourceType,\n} from './types';\nimport RESOURCES from './resources';\n\nclass RouteGroup {\n  private head: string;\n\n  private router: IExpressRouter;\n\n  private middlewares: NextFunction[];\n\n  constructor(\n    path: string = '',\n    router: IExpressRouter = Router(),\n    middlewares: NextFunction[] = []\n  ) {\n    this.head = path;\n    this.router = router;\n    this.middlewares = middlewares;\n  }\n\n  get path() {\n    return this.head;\n  }\n\n  public getRouter() {\n    return this.router;\n  }\n\n  public listRoutes() {\n    return listRoutes(this.router, { logger: false });\n  }\n\n  public group(...rawArgs: GroupArgs) {\n    const { middlewares, register, prefix = '' } = this.parseGroupArgs(rawArgs);\n    const head = normalizePath(this.head, prefix);\n    const group = new RouteGroup(head, this.router, [\n      ...this.middlewares,\n      ...middlewares,\n    ]);\n    const proxy = this.createProxy(this.router, group);\n\n    register(proxy);\n\n    return (this as unknown) as IRouter;\n  }\n\n  public resource(arg: IResource | ResourceType) {\n    let handlers = arg;\n    let middlewares = {} as ResourceType['middlewares'];\n    let parameters = {} as { [prop: string]: string };\n    const base = this.head.split('/');\n    let path = base.pop() || '';\n\n    if (isResourceConfig(arg)) {\n      handlers = arg.handlers;\n      path = arg.path || '';\n      middlewares = arg.middlewares || {};\n      parameters = arg.parameters || {};\n    }\n\n    Object.entries(RESOURCES).forEach(([endpoint, conf]) => {\n      if (!Reflect.has(handlers, endpoint)) {\n        return;\n      }\n\n      const key = endpoint as EndpointNames;\n      const { [key]: midds = [] } = middlewares || {};\n\n      // parse the path and generate parameter names\n      const names = path\n        .split('.')\n        .filter(Boolean)\n        .reduce((acc: string[], segment: string) => {\n          let items = [pluralize.singular(segment), 'id'];\n          if (parameters[segment]) {\n            items = parameters[segment].split(':');\n          }\n          const placeholder = makePlaceholder(makeCamelCase(...items));\n          acc.push(...base, segment, placeholder);\n          return acc;\n        }, []);\n\n      // if no need placeholder in last segment,\n      // remove it.\n      if (!conf.suffix) {\n        names.pop();\n      }\n\n      // get the method from the router\n      const fn = Reflect.get(this.router, conf.method);\n      if (typeof fn !== 'function') {\n        throw new Error('Invalid method');\n      }\n\n      // get the handler from the resource\n      const handler = (handlers as IResource)[endpoint as EndpointNames];\n      if (typeof handler !== 'function') {\n        throw new Error('Handler is not a function');\n      }\n\n      const http = fn.bind(this.router);\n      http(names.join('/'), ...this.middlewares, midds, handler.bind(handlers));\n    });\n\n    return this;\n  }\n\n  private callRouter(arg: Function | RequestMethods) {\n    return typeof arg === 'function'\n      ? (path: string, ...inlineMiddlewares: NextFunction[]) => {\n          const http = arg.bind(this.router);\n          const route = normalizePath(this.head, path);\n          http(route, ...this.middlewares, ...inlineMiddlewares);\n        }\n      : this.router[arg];\n  }\n\n  private createProxy(router: IExpressRouter, target: RouteGroup) {\n    const callRouter = this.callRouter.bind(target);\n    const handler = {\n      get: function(_: unknown, prop: 'group' | 'path') {\n        return Reflect.has(target, prop)\n          ? Reflect.get<RouteGroup, string>(target, prop)\n          : callRouter(router[prop as RequestMethods]);\n      },\n    };\n    return new Proxy<IRouter>((this as unknown) as IRouter, handler);\n  }\n\n  private parseGroupArgs(args: unknown[]) {\n    switch (typeof args[0]) {\n      case 'string': {\n        const register = args.pop();\n        return {\n          prefix: args[0],\n          register: register as RegisterCb,\n          middlewares: args.slice(1) as NextFunction[],\n        };\n      }\n      case 'function': {\n        const register = args.pop();\n        return {\n          register: register as RegisterCb,\n          middlewares: args as NextFunction[],\n        };\n      }\n      default:\n        throw new Error('invalid group parameters');\n    }\n  }\n}\n\nexport default RouteGroup;\n"],"names":["sanitizer","path","replace","normalizePath","paths","Array","_len","_key","arguments","map","filter","Boolean","join","isResourceConfig","opts","makePlaceholder","name","startsWith","makeCamelCase","_len2","length","args","_key2","camelCase","v","trim","RESOURCES","index","method","suffix","show","store","update","patch","destroy","RouteGroup","router","middlewares","Router","head","_proto","prototype","getRouter","listRoutes","logger","group","rawArgs","_this$parseGroupArgs","parseGroupArgs","register","_this$parseGroupArgs$","prefix","concat","proxy","createProxy","resource","arg","handlers","parameters","base","split","pop","Object","entries","forEach","_ref","endpoint","conf","Reflect","has","key","_ref2","_ref2$key","midds","names","reduce","acc","segment","items","pluralize","singular","placeholder","apply","push","fn","get","_this","Error","handler","http","bind","callRouter","_this2","route","inlineMiddlewares","target","_","prop","Proxy","slice","_createClass"],"mappings":"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"}