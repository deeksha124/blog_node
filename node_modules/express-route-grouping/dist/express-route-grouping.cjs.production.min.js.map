{"version":3,"file":"express-route-grouping.cjs.production.min.js","sources":["../src/utils.ts","../src/resources.ts","../src/index.ts"],"sourcesContent":["import { IResource, ResourceType } from './types';\nimport camelCase from 'lodash.camelcase';\n\nexport const sanitizer = (path: string) => {\n  if (path === '/') return '';\n\n  // remove slashes at start and end positions, if exists\n  // to sure there is no any slashes.\n  return path.replace(/^(\\/+)(.)/, '$2').replace(/(.)(\\/+)$/, '$1');\n};\n\nexport const leftPad = (value: string, pad: string, cond: boolean) => {\n  let newValue = value;\n  // add delimiter on the end\n  if (cond === true) {\n    newValue = value.padStart(value.length + 1, pad);\n  }\n  return newValue;\n};\n\nexport const normalizePath = (...paths: string[]) => {\n  return paths\n    .map(sanitizer)\n    .filter(Boolean)\n    .join('/');\n};\n\nexport const isResourceConfig = (\n  opts: IResource | ResourceType\n): opts is ResourceType => {\n  return 'handlers' in opts;\n};\n\nexport const makePlaceholder = (name: string) => {\n  if (!name || name.startsWith(':')) {\n    return name;\n  }\n  return `:${name}`;\n};\n\nexport const makeCamelCase = (...args: string[]) =>\n  camelCase(\n    args\n      .filter(Boolean)\n      .map(v => v.trim())\n      .join(' ')\n  );\n","const RESOURCES = {\n  index: { method: 'get', suffix: false },\n  show: { method: 'get', suffix: true },\n  store: { method: 'post', suffix: false },\n  update: { method: 'put', suffix: true },\n  patch: { method: 'patch', suffix: true },\n  destroy: { method: 'delete', suffix: true },\n};\n\nexport default RESOURCES;\n","import { IRouter as IExpressRouter, Router, NextFunction } from 'express';\nimport pluralize from 'pluralize';\nimport listRoutes from 'express-list-routes';\n\nimport {\n  isResourceConfig,\n  makeCamelCase,\n  makePlaceholder,\n  normalizePath,\n} from './utils';\nimport {\n  EndpointNames,\n  GroupArgs,\n  IResource,\n  IRouter,\n  RegisterCb,\n  RequestMethods,\n  ResourceType,\n} from './types';\nimport RESOURCES from './resources';\n\nclass RouteGroup {\n  private head: string;\n\n  private router: IExpressRouter;\n\n  private middlewares: NextFunction[];\n\n  constructor(\n    path: string = '',\n    router: IExpressRouter = Router(),\n    middlewares: NextFunction[] = []\n  ) {\n    this.head = path;\n    this.router = router;\n    this.middlewares = middlewares;\n  }\n\n  get path() {\n    return this.head;\n  }\n\n  public getRouter() {\n    return this.router;\n  }\n\n  public listRoutes() {\n    return listRoutes(this.router, { logger: false });\n  }\n\n  public group(...rawArgs: GroupArgs) {\n    const { middlewares, register, prefix = '' } = this.parseGroupArgs(rawArgs);\n    const head = normalizePath(this.head, prefix);\n    const group = new RouteGroup(head, this.router, [\n      ...this.middlewares,\n      ...middlewares,\n    ]);\n    const proxy = this.createProxy(this.router, group);\n\n    register(proxy);\n\n    return (this as unknown) as IRouter;\n  }\n\n  public resource(arg: IResource | ResourceType) {\n    let handlers = arg;\n    let middlewares = {} as ResourceType['middlewares'];\n    let parameters = {} as { [prop: string]: string };\n    const base = this.head.split('/');\n    let path = base.pop() || '';\n\n    if (isResourceConfig(arg)) {\n      handlers = arg.handlers;\n      path = arg.path || '';\n      middlewares = arg.middlewares || {};\n      parameters = arg.parameters || {};\n    }\n\n    Object.entries(RESOURCES).forEach(([endpoint, conf]) => {\n      if (!Reflect.has(handlers, endpoint)) {\n        return;\n      }\n\n      const key = endpoint as EndpointNames;\n      const { [key]: midds = [] } = middlewares || {};\n\n      // parse the path and generate parameter names\n      const names = path\n        .split('.')\n        .filter(Boolean)\n        .reduce((acc: string[], segment: string) => {\n          let items = [pluralize.singular(segment), 'id'];\n          if (parameters[segment]) {\n            items = parameters[segment].split(':');\n          }\n          const placeholder = makePlaceholder(makeCamelCase(...items));\n          acc.push(...base, segment, placeholder);\n          return acc;\n        }, []);\n\n      // if no need placeholder in last segment,\n      // remove it.\n      if (!conf.suffix) {\n        names.pop();\n      }\n\n      // get the method from the router\n      const fn = Reflect.get(this.router, conf.method);\n      if (typeof fn !== 'function') {\n        throw new Error('Invalid method');\n      }\n\n      // get the handler from the resource\n      const handler = (handlers as IResource)[endpoint as EndpointNames];\n      if (typeof handler !== 'function') {\n        throw new Error('Handler is not a function');\n      }\n\n      const http = fn.bind(this.router);\n      http(names.join('/'), ...this.middlewares, midds, handler.bind(handlers));\n    });\n\n    return this;\n  }\n\n  private callRouter(arg: Function | RequestMethods) {\n    return typeof arg === 'function'\n      ? (path: string, ...inlineMiddlewares: NextFunction[]) => {\n          const http = arg.bind(this.router);\n          const route = normalizePath(this.head, path);\n          http(route, ...this.middlewares, ...inlineMiddlewares);\n        }\n      : this.router[arg];\n  }\n\n  private createProxy(router: IExpressRouter, target: RouteGroup) {\n    const callRouter = this.callRouter.bind(target);\n    const handler = {\n      get: function(_: unknown, prop: 'group' | 'path') {\n        return Reflect.has(target, prop)\n          ? Reflect.get<RouteGroup, string>(target, prop)\n          : callRouter(router[prop as RequestMethods]);\n      },\n    };\n    return new Proxy<IRouter>((this as unknown) as IRouter, handler);\n  }\n\n  private parseGroupArgs(args: unknown[]) {\n    switch (typeof args[0]) {\n      case 'string': {\n        const register = args.pop();\n        return {\n          prefix: args[0],\n          register: register as RegisterCb,\n          middlewares: args.slice(1) as NextFunction[],\n        };\n      }\n      case 'function': {\n        const register = args.pop();\n        return {\n          register: register as RegisterCb,\n          middlewares: args as NextFunction[],\n        };\n      }\n      default:\n        throw new Error('invalid group parameters');\n    }\n  }\n}\n\nexport default RouteGroup;\n"],"names":["sanitizer","path","replace","normalizePath","paths","Array","_len","_key","arguments","map","filter","Boolean","join","makeCamelCase","_len2","length","args","_key2","camelCase","v","trim","RESOURCES","index","method","suffix","show","store","update","patch","destroy","RouteGroup","router","middlewares","Router","this","head","_proto","prototype","getRouter","listRoutes","logger","group","rawArgs","_this$parseGroupArgs","parseGroupArgs","register","_this$parseGroupArgs$","prefix","concat","proxy","createProxy","resource","arg","handlers","parameters","base","split","pop","Object","entries","forEach","_ref","endpoint","conf","Reflect","has","_ref2$key","midds","names","reduce","acc","segment","items","pluralize","singular","name","placeholder","apply","startsWith","push","fn","get","_this","Error","handler","bind","callRouter","http","_this2","route","inlineMiddlewares","target","Proxy","_","prop","slice","key"],"mappings":"miBAGO,IAAMA,EAAY,SAACC,GACxB,MAAa,MAATA,EAAqB,GAIlBA,EAAKC,QAAQ,YAAa,MAAMA,QAAQ,YAAa,OAYjDC,EAAgB,sCAAIC,MAAeC,MAAAC,GAAAC,IAAAA,EAAAD,EAAAC,IAAfH,EAAeG,GAAAC,UAAAD,GAC9C,OAAOH,EACJK,IAAIT,GACJU,OAAOC,SACPC,KAAK,MAgBGC,EAAgB,WAAH,QAAAC,EAAAN,UAAAO,OAAOC,MAAcX,MAAAS,GAAAG,IAAAA,EAAAH,EAAAG,IAAdD,EAAcC,GAAAT,UAAAS,GAAA,OAC7CC,EACEF,EACGN,OAAOC,SACPF,KAAI,SAAAU,GAAC,OAAIA,EAAEC,UACXR,KAAK,OC7CNS,EAAY,CAChBC,MAAO,CAAEC,OAAQ,MAAOC,QAAQ,GAChCC,KAAM,CAAEF,OAAQ,MAAOC,QAAQ,GAC/BE,MAAO,CAAEH,OAAQ,OAAQC,QAAQ,GACjCG,OAAQ,CAAEJ,OAAQ,MAAOC,QAAQ,GACjCI,MAAO,CAAEL,OAAQ,QAASC,QAAQ,GAClCK,QAAS,CAAEN,OAAQ,SAAUC,QAAQ,+BCsBrC,SAAAM,EACE7B,EACA8B,EACAC,YAFA/B,IAAAA,EAAe,aACf8B,IAAAA,EAAyBE,qBACzBD,IAAAA,EAA8B,IAAEE,KAT1BC,YAAID,KAEJH,cAAMG,KAENF,mBAONE,KAAKC,KAAOlC,EACZiC,KAAKH,OAASA,EACdG,KAAKF,YAAcA,EACpB,QAAAI,EAAAN,EAAAO,UAmIA,OAnIAD,EAMME,UAAA,WACL,OAAOJ,KAAKH,QACbK,EAEMG,WAAA,WACL,OAAOA,EAAWL,KAAKH,OAAQ,CAAES,QAAQ,KAC1CJ,EAEMK,MAAA,sCAASC,MAAkBrC,MAAAC,GAAAC,IAAAA,EAAAD,EAAAC,IAAlBmC,EAAkBnC,GAAAC,UAAAD,GAChC,IAAAoC,EAA+CT,KAAKU,eAAeF,GAA3DV,EAAWW,EAAXX,YAAaa,EAAQF,EAARE,SAAQC,EAAAH,EAAEI,OAAAA,WAAMD,EAAG,GAAEA,EACpCX,EAAOhC,EAAc+B,KAAKC,KAAMY,GAChCN,EAAQ,IAAIX,EAAWK,EAAMD,KAAKH,UAAMiB,OACzCd,KAAKF,YACLA,IAECiB,EAAQf,KAAKgB,YAAYhB,KAAKH,OAAQU,GAI5C,OAFAI,EAASI,GAEDf,MACTE,EAEMe,SAAA,SAASC,cACVC,EAAWD,EACXpB,EAAc,GACdsB,EAAa,GACXC,EAAOrB,KAAKC,KAAKqB,MAAM,KACzBvD,EAAOsD,EAAKE,OAAS,GAqDzB,MF5FK,aEyCgBL,IACnBC,EAAWD,EAAIC,SACfpD,EAAOmD,EAAInD,MAAQ,GACnB+B,EAAcoB,EAAIpB,aAAe,GACjCsB,EAAaF,EAAIE,YAAc,IAGjCI,OAAOC,QAAQtC,GAAWuC,SAAQ,SAAAC,OAAEC,EAAQD,KAAEE,EAAIF,KAChD,GAAKG,QAAQC,IAAIZ,EAAUS,GAA3B,CAIA,IAC+CI,GAAjBlC,GAAe,IADjC8B,GACGK,WAAKD,EAAG,GAAEA,EAGnBE,EAAQnE,EACXuD,MAAM,KACN9C,OAAOC,SACP0D,QAAO,SAACC,EAAeC,GACtB,IAAIC,EAAQ,CAACC,EAAUC,SAASH,GAAU,MACtCjB,EAAWiB,KACbC,EAAQlB,EAAWiB,GAASf,MAAM,MAEpC,IF9DsBmB,EE8DhBC,IF9DgBD,EE8Dc9D,EAAagE,aAAIL,KF7DhDG,EAAKG,WAAW,KACpBH,MAEEA,EE4DH,OADAL,EAAIS,KAAIF,MAARP,EAAYf,EAAIP,QAAEuB,EAASK,KACpBN,IACN,IAIAP,EAAKvC,QACR4C,EAAMX,MAIR,IAAMuB,EAAKhB,QAAQiB,IAAIC,EAAKnD,OAAQgC,EAAKxC,QACzC,GAAkB,mBAAPyD,EACT,MAAM,IAAIG,MAAM,kBAIlB,IAAMC,EAAW/B,EAAuBS,GACxC,GAAuB,mBAAZsB,EACT,MAAM,IAAID,MAAM,6BAGLH,EAAGK,KAAKH,EAAKnD,QACtB8C,cAACT,EAAMxD,KAAK,MAAIoC,OAAKkC,EAAKlD,aAAamC,EAAOiB,EAAQC,KAAKhC,UAG1DnB,MACRE,EAEOkD,WAAA,SAAWlC,cACjB,MAAsB,mBAARA,EACV,SAACnD,GAE8C,IAD7C,IAAMsF,EAAOnC,EAAIiC,KAAKG,EAAKzD,QACrB0D,EAAQtF,EAAcqF,EAAKrD,KAAMlC,GAAMa,EAAAN,UAAAO,OAF7B2E,MAAiCrF,MAAAS,IAAAA,OAAAG,IAAAA,EAAAH,EAAAG,IAAjCyE,EAAiCzE,KAAAT,UAAAS,GAGjDsE,EAAIV,cAACY,GAAKzC,OAAKwC,EAAKxD,YAAgB0D,KAEtCxD,KAAKH,OAAOqB,IACjBhB,EAEOc,YAAA,SAAYnB,EAAwB4D,GAC1C,IAAML,EAAapD,KAAKoD,WAAWD,KAAKM,GAQxC,OAAO,IAAIC,MAAgB1D,KAPX,CACd+C,IAAK,SAASY,EAAYC,GACxB,OAAO9B,QAAQC,IAAI0B,EAAQG,GACvB9B,QAAQiB,IAAwBU,EAAQG,GACxCR,EAAWvD,EAAO+D,QAI3B1D,EAEOQ,eAAA,SAAe5B,GACrB,cAAeA,EAAK,IAClB,IAAK,SACH,IAAM6B,EAAW7B,EAAKyC,MACtB,MAAO,CACLV,OAAQ/B,EAAK,GACb6B,SAAUA,EACVb,YAAahB,EAAK+E,MAAM,IAG5B,IAAK,WAEH,MAAO,CACLlD,SAFe7B,EAAKyC,MAGpBzB,YAAahB,GAGjB,QACE,MAAM,IAAImE,MAAM,gCAErBrD,OAAAkE,WAAAf,IAjID,WACE,OAAO/C,KAAKC"}